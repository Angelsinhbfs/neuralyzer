// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Neuralyzer = Neuralyzer || {};

/**
 * @const
 * @namespace
 */
Neuralyzer.Transport = Neuralyzer.Transport || {};

/**
 * @const
 * @namespace
 */
Neuralyzer.Transport.FlatBuffers = Neuralyzer.Transport.FlatBuffers || {};

/**
 * @constructor
 */
Neuralyzer.Transport.FlatBuffers.Vector3 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Neuralyzer.Transport.FlatBuffers.Vector3}
 */
Neuralyzer.Transport.FlatBuffers.Vector3.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.Vector3.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.Vector3.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.Vector3.prototype.z = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.Vector3.createVector3 = function(builder, x, y, z) {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Neuralyzer.Transport.FlatBuffers.TargetPlacement}
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Neuralyzer.Transport.FlatBuffers.TargetPlacement=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.TargetPlacement}
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.getRootAsTargetPlacement = function(bb, obj) {
  return (obj || new Neuralyzer.Transport.FlatBuffers.TargetPlacement).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {Neuralyzer.Transport.FlatBuffers.Vector3=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.Vector3|null}
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.prototype.position = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.Vector3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.startTargetPlacement = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} positionOffset
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.addPosition = function(builder, positionOffset) {
  builder.addFieldStruct(2, positionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.TargetPlacement.endTargetPlacement = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Neuralyzer.Transport.FlatBuffers.Annotation = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Neuralyzer.Transport.FlatBuffers.Annotation}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Neuralyzer.Transport.FlatBuffers.Annotation=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.Annotation}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.getRootAsAnnotation = function(bb, obj) {
  return (obj || new Neuralyzer.Transport.FlatBuffers.Annotation).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.prototype.userId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.prototype.lineId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Neuralyzer.Transport.FlatBuffers.Vector3=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.Vector3}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.prototype.positions = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.Vector3).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.prototype.positionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Neuralyzer.Transport.FlatBuffers.Annotation.startAnnotation = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} userIdOffset
 */
Neuralyzer.Transport.FlatBuffers.Annotation.addUserId = function(builder, userIdOffset) {
  builder.addFieldOffset(0, userIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} lineIdOffset
 */
Neuralyzer.Transport.FlatBuffers.Annotation.addLineId = function(builder, lineIdOffset) {
  builder.addFieldOffset(1, lineIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} positionsOffset
 */
Neuralyzer.Transport.FlatBuffers.Annotation.addPositions = function(builder, positionsOffset) {
  builder.addFieldOffset(2, positionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Neuralyzer.Transport.FlatBuffers.Annotation.startPositionsVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.Annotation.endAnnotation = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Neuralyzer.Transport.FlatBuffers.RoomObject = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Neuralyzer.Transport.FlatBuffers.RoomObject}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Neuralyzer.Transport.FlatBuffers.RoomObject=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.RoomObject}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.getRootAsRoomObject = function(bb, obj) {
  return (obj || new Neuralyzer.Transport.FlatBuffers.RoomObject).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.disposable = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.owner = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {Neuralyzer.Transport.FlatBuffers.Vector3=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.Vector3|null}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.position = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.Vector3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Neuralyzer.Transport.FlatBuffers.Vector3=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.Vector3|null}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.lookDirection = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.Vector3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.prefab = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.isHidden = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.startRoomObject = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} disposable
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addDisposable = function(builder, disposable) {
  builder.addFieldInt8(1, +disposable, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ownerOffset
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addOwner = function(builder, ownerOffset) {
  builder.addFieldOffset(2, ownerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} positionOffset
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addPosition = function(builder, positionOffset) {
  builder.addFieldStruct(3, positionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} lookDirectionOffset
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addLookDirection = function(builder, lookDirectionOffset) {
  builder.addFieldStruct(4, lookDirectionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} prefabOffset
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addPrefab = function(builder, prefabOffset) {
  builder.addFieldOffset(5, prefabOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isHidden
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addIsHidden = function(builder, isHidden) {
  builder.addFieldInt8(6, +isHidden, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.addName = function(builder, nameOffset) {
  builder.addFieldOffset(7, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.RoomObject.endRoomObject = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Neuralyzer.Transport.FlatBuffers.StateUpdate}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Neuralyzer.Transport.FlatBuffers.StateUpdate=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.StateUpdate}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.getRootAsStateUpdate = function(bb, obj) {
  return (obj || new Neuralyzer.Transport.FlatBuffers.StateUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.siteDrive = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {Neuralyzer.Transport.FlatBuffers.TargetPlacement=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.TargetPlacement|null}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.poi = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.TargetPlacement).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {Neuralyzer.Transport.FlatBuffers.Annotation=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.Annotation}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.annotations = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.Annotation).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.annotationsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Neuralyzer.Transport.FlatBuffers.RoomObject=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.RoomObject}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.create = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.RoomObject).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.createLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Neuralyzer.Transport.FlatBuffers.RoomObject=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.RoomObject}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.update = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Neuralyzer.Transport.FlatBuffers.RoomObject).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.updateLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.delete = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.deleteLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.prototype.deleteArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.startStateUpdate = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} siteDriveOffset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.addSiteDrive = function(builder, siteDriveOffset) {
  builder.addFieldOffset(0, siteDriveOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} poiOffset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.addPoi = function(builder, poiOffset) {
  builder.addFieldOffset(1, poiOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} annotationsOffset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.addAnnotations = function(builder, annotationsOffset) {
  builder.addFieldOffset(2, annotationsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.createAnnotationsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.startAnnotationsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} createOffset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.addCreate = function(builder, createOffset) {
  builder.addFieldOffset(3, createOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.createCreateVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.startCreateVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} updateOffset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.addUpdate = function(builder, updateOffset) {
  builder.addFieldOffset(4, updateOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.createUpdateVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.startUpdateVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} deleteOffset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.addDelete = function(builder, deleteOffset) {
  builder.addFieldOffset(5, deleteOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.createDeleteVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.startDeleteVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.endStateUpdate = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Neuralyzer.Transport.FlatBuffers.StateUpdate.finishStateUpdateBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.Neuralyzer = Neuralyzer;
