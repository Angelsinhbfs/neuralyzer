// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Neuralyzer = Neuralyzer || {};

/**
 * @const
 * @namespace
 */
Neuralyzer.Transport = Neuralyzer.Transport || {};

/**
 * @const
 * @namespace
 */
Neuralyzer.Transport.FlatBuffers = Neuralyzer.Transport.FlatBuffers || {};

/**
 * @constructor
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Neuralyzer.Transport.FlatBuffers.JoinCreateRequest}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Neuralyzer.Transport.FlatBuffers.JoinCreateRequest=} obj
 * @returns {Neuralyzer.Transport.FlatBuffers.JoinCreateRequest}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.getRootAsJoinCreateRequest = function(bb, obj) {
  return (obj || new Neuralyzer.Transport.FlatBuffers.JoinCreateRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.prototype.room = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.prototype.userId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.prototype.deviceType = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.startJoinCreateRequest = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} roomOffset
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.addRoom = function(builder, roomOffset) {
  builder.addFieldOffset(0, roomOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} userIdOffset
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.addUserId = function(builder, userIdOffset) {
  builder.addFieldOffset(2, userIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} deviceTypeOffset
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.addDeviceType = function(builder, deviceTypeOffset) {
  builder.addFieldOffset(3, deviceTypeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.endJoinCreateRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Neuralyzer.Transport.FlatBuffers.JoinCreateRequest.finishJoinCreateRequestBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.Neuralyzer = Neuralyzer;
